import React, { useEffect, useState, ChangeEvent } from 'react';
import {AiOutlineSearch} from 'react-icons/ai';
import './styles.css';
import LineTable from '../../components/Table/LineTable';
import api from '../../services/api';

interface Hosts{
    id: number,
    created: string,
    modified: string,
    hostname: string,
    ip_address: string,
    risk: string,
    vuln_count: number
}

const List = () => {

    const [hosts, setHosts] = useState<Hosts[]>([])
    const [search, setSearch] = useState('')

    useEffect(() => {
       api.get('/api/assets/').then(response => {
           setHosts(response.data.results)
       })

    }, [])

    function handleSearch(event: ChangeEvent<HTMLInputElement>){
        setSearch(event.target.value)
    }

    return(
        <div className = 'container-list'>

            <header id = 'header-list'>
                <div className = 'header-content'>
                    <div className = 'search-container'>
                        <div className = 'search'>
                            <AiOutlineSearch />
                            <input type="search" onChange = {handleSearch}/>
                        
                        </div>
                        <button type = 'button'>Buscar</button>
                    </div>
                </div>
               
            </header>

            <main id = 'main-list'>
                <div className = 'container-table'>
                    <LineTable 
                    id = 'ID'
                    created = 'Criação'
                    modified = 'Modificação' 
                    hostname = 'Host'
                    ip_address = 'Endereço IP'
                    risk = 'Risco'
                    vuln_count = 'Vulnerabilidades'/>
                    
                    {hosts.map(host => (
                        <LineTable 
                        key = {host.id}
                        id = {`${host.id}`}
                        created = {host.created}
                        modified = {host.modified} 
                        hostname = {host.hostname}
                        ip_address = {host.ip_address}
                        risk = {host.risk}
                        vuln_count = {`${host.vuln_count}`}/>
                    ))}
                    
                    

                    <footer>
                        <p>Mostrando {hosts.length} de {hosts.length} resultados</p>

                        <nav aria-label="Page navigation example">
                            <ul className="pagination">
                                <li className="page-item">
                                <button className="page-link" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </button>
                                </li>
                                <li className="page-item"><button className="page-link" >1</button></li>
                                <li className="page-item"><button className="page-link">2</button></li>
                                <li className="page-item"><button className="page-link">3</button></li>
                                <li className="page-item">
                                <button className="page-link" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </button>
                                </li>
                            </ul>
                        </nav>
                    </footer>
                   
                </div>
            </main>
        </div>
    )
}

export default List;