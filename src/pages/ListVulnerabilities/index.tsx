import React, { useState, useEffect } from 'react';
import {AiOutlineSearch} from 'react-icons/ai'
import {RiDashboardFill} from 'react-icons/ri'
import LinkNavigation from '../../components/LinkNavigation';

import './styles.css';
import api from '../../services/api';
import ContainerVulnerabilities from '../../components/ContainerVulnerabilities';

export interface Vulnerabilities{
    id: number,
    title: string,
    severity: string,
    cvss: string,
    publication_date: string,
    asset_count: number
}

const ListVulnerabilities = () => {
    const [search,setSearch] = useState('')
    const [vulnerabilities, setVulnerabilities] = useState<Vulnerabilities[]>([]);
    const [filterSelect,setFilterSelect] = useState('');

    useEffect(() => {
        api.get('/api/vulnerabilities').then(response => {
            setVulnerabilities(response.data.results)
        })
    },[])

    function searchVulnerabilitiesByFilters(){
        api.get(`/api/vulnerabilities/?${filterSelect}=${search}`).then(response => {
            setVulnerabilities(response.data.results)
        })
    }

    function searchVulnerabilitiesByOrder(typeOrder: string){
        api.get(`api/vulnerabilities/?ordering=${typeOrder}`).then(response => {
            setVulnerabilities(response.data.results)
        })
    }

    return(
        <div className = 'container-list'>
             <header id = 'header-list'>
                <div className = 'header-content'>
                <div className = 'container-filter-order'>

                        <select name="filter" id="filter" onChange = {(e) => setFilterSelect(e.target.value)}>
                            <option value="">Filtrar por...</option>
                            <option value="asset">Host</option>
                            <option value="severity">Severidade</option>
                        </select>

                        <select name="order" 
                        onChange = {(e) => searchVulnerabilitiesByOrder(e.target.value)} 
                        id="order">

                            <option value="">Ordenar por...</option>
                            <option value="title">TÃ­tulo</option>
                            <option value="severity">Severidade</option>
                            <option value="cvss">CVSS</option>
                            <option value="asset_count">Hosts</option>
                        </select>
                    </div>

                    <div className = 'search-container'>
                        <div className = 'search'>
                            <AiOutlineSearch />
                            <input type="search" onChange = {(e) => setSearch(e.target.value)}/>
                            
                        </div>
                        <button type = 'button' onClick = {searchVulnerabilitiesByFilters}>Search</button>
                    </div>

            
                    <LinkNavigation urlLink = '/DashBoard' textLink = 'DashBoard' IconLink = {RiDashboardFill}/>
                </div>
               
            </header>

            <main id = 'main-list'>
                <div className = 'box-list'>

                    {vulnerabilities.map(vulnerability => (
                         <ContainerVulnerabilities 
                         key = {vulnerability.id}
                         id = {vulnerability.id} 
                         title = {vulnerability.title} 
                         severity = {vulnerability.severity} 
                         cvss = {vulnerability.cvss}
                         publication_date = {vulnerability.publication_date}
                         asset_count = {vulnerability.asset_count}/>
                    ))}

                </div>
            </main>
        </div>
    )
}

export default ListVulnerabilities;
